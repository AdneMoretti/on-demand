CREATE TABLE IF NOT EXISTS ADDRESS (
    id UUID PRIMARY KEY,
    latitude DECIMAL(8,6) NOT NULL,
    longitude DECIMAL(9,6) NOT NULL
);

CREATE TABLE IF NOT EXISTS MERCHANT (
    id UUID PRIMARY KEY,
    name VARCHAR(255),
    description VARCHAR(255)
);

CREATE TYPE ORDERS_STATUS AS ENUM ('PENDING', 'WAITING DRIVER', 'WAITING MERCHANT', 'DONE', 'CANCELED');

CREATE TABLE IF NOT EXISTS ORDERS (
    id UUID PRIMARY KEY,
    merchant_id UUID NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    created_at TIMESTAMP,
    updated_at TIMESTAMP,
    status ORDERS_STATUS NOT NULL
);

CREATE TYPE CAMPAIGN_TYPE AS ENUM('SURGE', 'DISCOUNT');

CREATE TYPE OPERATION_TYPE AS ENUM('SUM', 'PRODUCT');

CREATE TABLE IF NOT EXISTS CAMPAIGN (
    surge_id UUID PRIMARY KEY,
    type campaign_type,
    price INTEGER,
    operation OPERATION_TYPE,
    begin_time TIMESTAMP,
    end_time TIMESTAMP,
    created_at TIMESTAMP,
    updated_at TIMESTAMP
);

CREATE TYPE EVENT_TYPE AS ENUM ('FULL', 'NRE', 'AVAILABLE');

CREATE TABLE IF NOT EXISTS EVENTS (
    id SERIAL PRIMARY KEY,
    type EVENT_TYPE,
    created_at TIMESTAMP,
    updated_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS QUOTATION_REJECTED(
    rejection_id UUID PRIMARY KEY,
    reason VARCHAR(255),
    merchant_id UUID REFERENCES MERCHANT(id),
    created_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS QUOTATION (
    id UUID PRIMARY KEY,
    order_id UUID REFERENCES ORDERS(id),
    price_base DECIMAL(10, 2),
    price_surge DECIMAL(10, 2),
    price_discount DECIMAL(10,2),
    distance DECIMAL(4, 2),
    created_at TIMESTAMP
);

